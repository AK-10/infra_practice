---
- hosts: web_a
  remote_user: vagrant
  vars:
      rbenv_root: /usr/local/rbenv/
      app_root: /home/vagrant/infra-web-a
      bundle_path: /usr/local/rbenv/shims/bundle

  tasks:
      - name: 'add nginx pgp key'
        become: true
        apt_key:
            url: https://nginx.org/keys/nginx_signing.key
            state: present

      - name: 'add nginx repository'
        become: true
        apt_repository:
            repo: deb http://nginx.org/packages/ubuntu/ bionic nginx

      - name: 'apt update'
        become: true
        apt:
            update_cache: true

      - name: 'install nginx'
        become: true
        apt:
            name: nginx
            state: latest

      - name: 'scp nginx conf'
        copy:
            src: /Users/atsushikonishi/WorkSpace/Infra/infra_practice/task01/nginx
            dest: /home/vagrant/
            force: true

      - name: 'scp html'
        copy:
            src: /Users/atsushikonishi/WorkSpace/Infra/infra_practice/task01/html
            dest: /home/vagrant/
            force: true

      - name: 'restart nginx'
        become: true
        systemd:
            name: nginx
            enabled: true
            state: restarted

      - name: 'install pkg for ruby dependencies'
        become: true
        apt:
            update_cache: true
            name:
            - autoconf
            - bison
            - build-essential
            - libssl-dev
            - libyaml-dev
            - libreadline6-dev
            - zlib1g-dev
            - libncurses5-dev
            - libffi-dev
            - libgdbm5
            - libgdbm-dev

      - name: 'install rbenv'
        become: true
        git:
            repo: https://github.com/rbenv/rbenv.git
            dest: "{{ rbenv_root }}"

      - name: 'install ruby-build'
        become: true
        git:
            repo: https://github.com/rbenv/ruby-build.git
            dest: "{{ rbenv_root }}plugins/ruby-build/"

      - name: 'send rbenv.sh to /etc/profile.d'
        become: true
        template:
            src: profile.d/rbenv.sh.j2
            dest: /etc/profile.d/rbenv.sh
            owner: vagrant
            group: vagrant
            mode: 0755

      - name: 'change group rbenv'
        become: true
        file:
            path: "{{ rbenv_root }}"
            owner: vagrant
            group: vagrant
            recurse: true
            state: directory

      - name: 'install ruby 2.6.5'
        shell: bash -lc "rbenv install --skip-existing 2.6.5"

      - name: 'set ruby version 2.6.5'
        shell: bash -lc "rbenv global 2.6.5"

      - name: 'install old node'
        become: true
        apt:
            pkg:
            - nodejs
            - npm

      - name: 'install n'
        become: true
        community.general.npm:
            name: n
            global: true

      - name: 'install node 13.11.0'
        become: true
        shell: n install 13.11.0

      - name: 'purge old node'
        apt:
            name:
            - nodejs
            - npm
            purge: true

      - name: 'install yarn'
        become: true
        community.general.npm:
            name: yarn
            global: true
            version: 1.22.4

      - name: 'install mysql-client'
        become: true
        apt:
            name:
                - mysql-client
                - libmysqlclient-dev # gem mysql2の依存
                - libmariadb-dev # gem mysql2の依存
            state: latest

      - name: 'install bundler'
        shell: bash -lc "gem install bundler -v 2.1.4"

      - name: 'clone rails application'
        become_user: vagrant
        git:
            repo: https://github.com/AK-10/infra-web-a
            dest: "{{ app_root }}"

      - name: bundle install
        community.general.bundler:
            state: present
            chdir: "{{ app_root }}"
            executable: "{{ bundle_path }}"

      - name: yarn install --check-files
        shell:
            cmd: bash -lc "yarn install --check-files"
            chdir: "{{ app_root }}"

      - name: rails webpacker:install
        shell:
            cmd: bash -lc "bundle exec rails webpacker:install"
            chdir: "{{ app_root }}"

      - name: 'make sure env dir'
        file:
            path: /home/vagrant/env
            state: directory
            recurse: true

      - name: 'send envfile'
        become: true
        template:
            src: env/production.env.j2
            dest: /home/vagrant/env/production.env
            owner: vagrant
            group: vagrant
            mode: 0440

      # envでRAILS_ENV=productionになっているはず
      # TODO: 一回しかしたくない（shellは冪等性が保証されない?）
      # db:createはすでにある場合は何もしないので実は問題ない説ある
      - name: rails db:create
        shell:
            cmd: bash -lc "bundle exec rails db:create"
            chdir: "{{ app_root }}"

      - name: rails db:migrate
        shell:
            cmd: bash -lc "bundle exec rails db:migrate"
            chdir: "{{ app_root }}"

      - name: 'send webapp.service'
        become: true
        template:
            src: systemd/webapp.service.j2
            dest: /etc/systemd/system/webapp.service
            owner: vagrant
            group: vagrant
            mode: 0755

      - name: 'scp rails master.key'
        copy:
            src: /Users/atsushikonishi/WorkSpace/Infra/infra_practice/task01/provisioning/secrets/master.key
            dest: "{{ app_root }}/config/"
            force: true
            owner: vagrant
            group: vagrant
            mode: 0440

      - name: 'start webapp'
        become: true
        systemd:
            name: webapp
            enabled: true
            state: started

